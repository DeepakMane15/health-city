name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Debug SSH Key
        run: echo "${SSH_PRIVATE_KEY:0:10}..." # Print only the first 10 characters
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        shell: bash

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Test network connectivity to server
        run: |
          ping -c 4 $SERVER_IP
          nc -zv $SERVER_IP 22  # Check if SSH port is open
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Ensure this is set to a compatible version

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build Angular app
        run: npm run build

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
           eval "$(ssh-agent -s)"
           echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
           
           # Debug: List the added SSH keys to verify it's loaded
           ssh-add -l

           # Debug: Test SSH connection with verbose output
           ssh -v $SERVER_USER@$SERVER_IP "echo 'Connected to Server!'"
           
           # Verbose rsync to help debug any issues
           rsync -avz --progress --delete ./dist/ $SERVER_USER@$SERVER_IP:/var/www/snmhealthcity-fe/
        
      # Debug: Capture logs in case of failure
      - name: Capture logs on failure
        if: failure()
        run: |
          dmesg | tail -20
